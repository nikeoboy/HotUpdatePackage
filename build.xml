<?xml version="1.0" ?>
<project name="xyry" default="start" basedir=".">
    <!--当前时间戳-->
    <tstamp>
        <format property="nowTime" pattern="yyyyMMddhhmmss"/>
    </tstamp>

    <!--加载配置文件-->
    <property file="build.properties"/>

    <!--版本号-->
    <property name="version" value="${app.version}" />
    <!--上次构建的版本号-->
    <property name="last-build-version" value="${app.lasetVersion}" />
    <!--项目根目录-->
	<property name="project-root" value="${basedir}" />
    <!--项目目录-->
    <property name="project-path" value="${project-root}\bin\" />
    <!--发布目录根目录-->
    <property name="out-root" value="${project-root}\${app.dist}" />
    <!--发布目录-->
    <property name="out-path" value="${out-root}\${version}" />
    <!--上次发布目录-->
    <property name="last-out-path" value="${out-root}\${last-build-version}" />
    <!--增量包发布目录-->
    <property name="delta-path" value="${out-root}\${version}_delta" />
    <!--assets目录-->
    <property name="assets-path" value="${assets.dir}" />
    <!--MD5值-->
    <property name="zip-name" value="client_update_xyry_${version}_${nowTime}.zip" />

    <!--清理目录-->
    <target name="clean">
        <delete dir="${out-path}" />
    </target>

    <!--生产版本目录-->
    <target name="delpoy-web-game">
        <copy todir="${out-path}\assets">
            <fileset dir="${assets-path}" />
        </copy>

        <copy todir="${out-path}\res">
            <fileset dir="${project-path}\res\" />
        </copy>

        <copy todir="${out-path}\config">
            <fileset dir="${project-path}\config\">
                <include name="proto.json"/>
                <include name="resource.bin"/>
                <include name="resource.json"/>
                <include name="ui.json"/>
                <include name="win.json"/>
            </fileset>
        </copy>

        <copy file="${project-path}\js\engine.js" tofile="${out-path}\js\engine.js"/>
        <copy file="${project-path}\js\game.min.js" tofile="${out-path}\js\game.js"/>
        <copy file="${project-path}\js\launch.min.js" tofile="${out-path}\js\launch.js"/>
        <copy file="${project-path}\js\login.min.js" tofile="${out-path}\js\login.js"/>

        <copy file="${project-path}\libs\min\laya.webgl.min.js" tofile="${out-path}\libs\laya.webgl.js"/>
        <copy file="${project-path}\libs\min\laya.core.min.js" tofile="${out-path}\libs\laya.core.js"/>
        <copy file="${project-path}\libs\worker.js" tofile="${out-path}\libs\worker.js"/>
        <copy file="${project-path}\libs\min\vconsole.min.js" tofile="${out-path}\libs\vconsole.js"/>
    </target>

    <!--增量目录 如果为首次发布则将所有资源复制一份到增量目录-->
    <target name="delta-packge">
        <taskdef name="deltaPackge" classname="GenerateUtils" classpath="LayaBuild.jar"/>
        <!--使用上面字段中的name属性-->
        <deltaPackge root="${project-path}"
                     tempversion="${last-out-path}"
                     version="${out-path}"
                     export="${delta-path}"/>
    </target>

    <!--生成dcc文件-->
    <target name="layadcc" description="生成项目dcc文件">
        <taskdef name="dccVersion" classname="GenerateDcc" classpath="LayaBuild.jar"/>
        <dccVersion outpath="${out-path}"/>

    <!--拷贝文件到增量目录-->
        <move todir="${delta-path}\update">
            <fileset dir="${out-path}\update"/>
        </move>
    </target>

    <!--出zip包-->
    <target name="zip">
        <zip destfile="${delta-path}\${zip-name}" basedir="${delta-path}"/>
    </target>

    <!--zip包md5值-->
    <target name="md5">
        <checksum file="${delta-path}\${zip-name}" property="zipMD5"/>
    </target>

    <!--上传压缩包指服务器ssh-->
    <target name="upload">
<!--      <taskdef name="autoUpload" classname="FtpUplod" classpath="LayaBuild.jar"/>-->
<!--        <autoUpload-->
<!--                hostname="${ssh.hostname}"-->
<!--                port="${ssh.port}"-->
<!--                usename="${ssh.usename}"-->
<!--                passwd="${ssh.passwd}"-->
<!--                filename="${zip-name}"-->
<!--                fileabsolutepath="${delta-path}\${zip-name}"-->
<!--                remotedir="/${ssh.remotedir}"/>-->
    </target>

    <target name="start" depends="clean, delpoy-web-game, delta-packge, layadcc, zip, md5, upload">
        <echo message="${version}版本构建完成! 压缩包Md5值：${zipMD5}"/>
    </target>
</project>
